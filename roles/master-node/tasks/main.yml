- name: Copy manifest for create check sa
  template:
    src: role-binding-for-token.yml.j2
    dest: /tmp/role-binding-for-token.yml

- name: Apply manifest for check 
  shell: "kubectl apply -f /tmp/role-binding-for-token.yml"

- name: Get name token for check
  shell: "kubectl -n {{ ns_for_check }} get sa {{ name_sa_for_check }} -o jsonpath='{.secrets[0].name}'"
  register: GET_NAME_TOKEN

- name: Get data token and decode
  shell: "kubectl -n {{ ns_for_check }} get secret {{ GET_NAME_TOKEN.stdout }} -o jsonpath='{.data.token}'| base64 --decode"
  register: GET_DATA_TOKEN

- name: Get ip adress server-api
  shell: "kubectl config view | grep server | cut -f 2- -d ':' | tr -d ' '"
  register: GET_IPADDRES_API

- name: Get last octet as virtual router id
  shell: "echo {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} | cut -d . -f 4"
  register: GET_ROUTER_ID

- name: "Add K8S Token and Hash to dummy host"
  add_host:
    name:   "K8S_TOKEN_HOLDER"
    token:  "{{ GET_DATA_TOKEN.stdout }}"
    ipaddr:   "{{ GET_IPADDRES_API.stdout }}"
    idrouter: "{{ GET_ROUTER_ID.stdout }}"

- name:
  debug:
    msg: "[Master] K8S_TOKEN_HOLDER K8S token is {{ hostvars['K8S_TOKEN_HOLDER']['token'] }}"

- name:
  debug:
    msg: "[Master] K8S_TOKEN_HOLDER K8S Hash is  {{ hostvars['K8S_TOKEN_HOLDER']['ipaddr'] }}"
